summarise(n())
.libPaths(c("/Users/Jennifer/Documents/R packages", .libPaths()))
library(tidyverse); library(haven); library(Hmisc);library(psych) ## tidy verse not working conflicts!
library(labelled); library(QuantPsyc); library(stats)
chs14 <- read_sas("/Users/Jennifer/Documents/school/NYU Wagner/16-17/capstone/chs2014_public.sas7bdat")
#codebook
describe(chs14)
colnames(chs14)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidyverse)
library(stringr)
library(foreign)
---
title: "Dartmouth_docs"
output:
github_document: default
html_notebook: default
date: '`r Sys.Date()`'
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r, message=FALSE}
library(tidyverse)
library(stringr)
library(foreign)
```
```{r}
dart_raw <- read.dbf("../dropbox/capstone/data/raw/t_103113_1.dbf", as.is = TRUE)
names(dart_raw) <- names(dart_raw) %>% str_to_lower()
```
dart_raw <- read.dbf("../dropbox/capstone/data/raw/t_103113_1.dbf", as.is = TRUE)
library(tidyverse)
library(stringr)
library(foreign)
dart_raw <- read.dbf("../dropbox/capstone/data/raw/t_103113_1.dbf", as.is = TRUE)
plot(cars)
dart_raw <- read.dbf("Users/Jennifer/dropbox/capstone/data/raw/t_103113_1.dbf", as.is = TRUE)
library(foreign)
dart_raw <- read.dbf("Users/Jennifer/dropbox/capstone/data/raw/t_103113_1.dbf", as.is = TRUE)
?read.dbf
# Install packages if needed
package_list <- c("tidyverse", "stringr", "foreign", "ggmap", "tigris", "raster", "maptools", "viridis", "rmarkdown", "knitr")
new_packages <- package_list[! package_list %in% installed.packages()[,"Package"]]
if(length(new_packages)) install.packages(new_packages)
library(tidyverse) # for tidy data manipulation
library(stringr) # for string manipulation
# library(janitor) # for handy data cleaning tools
library(foreign) # For reading in DBF files
library(ggmap) # for additional ggplot2 themes (eg. theme_map)
library(tigris) # for downloading census shapefiles
# library(rgeos) # for handling spatial data
library(raster) # for erase function to clip tracts to shoreline (erase water)
library(maptools) # for manipulating spatial data
library(viridis) # for color palletes
dart_raw <- read.dbf("../dropbox/capstone/data/raw/t_103113_1.dbf", as.is = TRUE)
dart_raw <- read.dbf("../dropbox/capstone/data/raw/t_103113_1.dbf", as.is = TRUE)
dart_raw <- read.dbf("../dropbox/capstone/data/raw/t_103113_1.dbf", as.is = TRUE)
# Install packages if needed
package_list <- c("tidyverse", "stringr", "foreign", "ggmap", "tigris", "raster", "maptools", "viridis", "rmarkdown", "knitr")
new_packages <- package_list[! package_list %in% installed.packages()[,"Package"]]
if(length(new_packages)) install.packages(new_packages)
library(tidyverse) # for tidy data manipulation
library(stringr) # for string manipulation
# library(janitor) # for handy data cleaning tools
library(foreign) # For reading in DBF files
library(ggmap) # for additional ggplot2 themes (eg. theme_map)
library(tigris) # for downloading census shapefiles
# library(rgeos) # for handling spatial data
library(raster) # for erase function to clip tracts to shoreline (erase water)
library(maptools) # for manipulating spatial data
library(viridis) # for color palletes
dart_raw <- read.dbf("../dropbox/capstone/data/raw/t_103113_1.dbf", as.is = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
library(foreign)
dart_raw <- read.dbf("../dropbox/capstone/data/raw/t_103113_1.dbf", as.is = TRUE)
dart_raw <- read.dbf(".../dropbox/capstone/data/raw/t_103113_1.dbf", as.is = TRUE)
dart_raw <- read.dbf("../dropbox/capstone/data/raw/t_103113_1.dbf", as.is = TRUE)
names(dart_raw) <- names(dart_raw) %>% str_to_lower()
View(dart_raw)
dart_nyc <-
dart_raw %>%
as_data_frame() %>%
filter(county %in% c("36005", "36047", "36061", "36081", "36085")) %>%
transmute(
geoid = str_c(county, tract),
boro = recode(county,
"36005" = "Bronx", "36047" = "Brooklyn", "36061" = "Manhattan",
"36081" = "Queens", "36085" = "Staten Island"),
medicare_denom = tbene_n10,
medicare_acscd = tacs_10
) %>%
mutate_if(is.double, funs(if_else(. %in% c(-99, -999), NA_real_, .))) %>%
mutate(
acscd_rt = if_else(medicare_denom != 0, (medicare_acscd / medicare_denom)*1000, NA_real_)
)
head(dart_nyc)
?transmute
